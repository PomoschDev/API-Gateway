// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/card/company": {
            "get": {
                "description": "Банковская карта компании в базе данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CardCompany"
                ],
                "summary": "Банковская карта компании",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CardsCompaniesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновление банковской карты компании",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Обновление банковской карты компании",
                "parameters": [
                    {
                        "description": "Модель для обновления",
                        "name": "card",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CardCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CardCompany"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Создание банковской карты компании",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CardCompany"
                ],
                "summary": "Создание банковской карты компании",
                "parameters": [
                    {
                        "description": "Сущность банковской карты компании",
                        "name": "card",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CreateCardCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/card/company/deleteModel": {
            "post": {
                "description": "Удаляет банковскую карту компании опираясь на всю сущность модели",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CardCompany"
                ],
                "summary": "Удаление банковской карты компании по модели",
                "parameters": [
                    {
                        "description": "Сущность банковской карты компании",
                        "name": "card",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CardCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.HTTPCodes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/card/company/{id}": {
            "get": {
                "description": "Поиск банковской карты компании по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CardCompany"
                ],
                "summary": "Поиск банковской карты компании",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CardCompany"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаление банковской карты компании по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CardCompany"
                ],
                "summary": "Удаление банковской карты компании",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID банковской карты компании",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.HTTPCodes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/cards": {
            "get": {
                "description": "Массив банковских карт в базе данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Список всех банковских карт",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CardsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Создание банковской карты пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Создание банковской карты пользователя",
                "parameters": [
                    {
                        "description": "Сущность банковской карты",
                        "name": "card",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CreateCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/cards/deleteModel": {
            "post": {
                "description": "Удаляет банковскую карту опираясь на всю сущность модели",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Удаление банковской карты по модели",
                "parameters": [
                    {
                        "description": "Модель банковской карты",
                        "name": "card",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.Card"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.HTTPCodes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/cards/{id}": {
            "get": {
                "description": "Поиск банковской карты по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Поиск банковской карты",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.Card"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновление банковской карты",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Обновление банковской карты",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID банковской карты",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Модель для обновления",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.UpdateUserCardRequest1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.UpdateUserCardResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаление банковской карты пользователя по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Удаление банковской карты пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID банковской карты",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.HTTPCodes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/companies": {
            "get": {
                "description": "Массив компаний в базе данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Список всех компаний",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CompaniesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновление сущности компании",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Обновление компании",
                "parameters": [
                    {
                        "description": "Модель для обновления",
                        "name": "company",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.UpdateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.HTTPCodes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Создание новой сущности компании",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Создание компании",
                "parameters": [
                    {
                        "description": "Сущность компании",
                        "name": "company",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CreateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/": {
            "get": {
                "description": "Поиск компании по ее phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Поиск компании по номеру телефона",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/addCard": {
            "post": {
                "description": "Добавляет банковскую карту компании, поле companyId это ID компании в базе данных, которой будем добавлять карту",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Добавляет банковскую карту компании",
                "parameters": [
                    {
                        "description": "Сущность банковской карты",
                        "name": "card",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.AddCardToCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.AddCardToCompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/deleteModel": {
            "post": {
                "description": "Удаляет компании опираясь на всю сущность модели",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Удаление компании по модели",
                "parameters": [
                    {
                        "description": "Модель компании",
                        "name": "company",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.DeleteCompanyByModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.HTTPCodes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/{id}": {
            "get": {
                "description": "Поиск компании по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Поиск компании",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/{id}/card": {
            "get": {
                "description": "Извлечение банковской карты компании по ее ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Извлечение банковской карты компании",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CardCompany"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/company/{id}": {
            "delete": {
                "description": "Удаление компании по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Удаление компании",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID компании",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.HTTPCodes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "Массив пользователей в базе данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Список всех пользователей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.UsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Создание новой сущности пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Создание пользователя",
                "parameters": [
                    {
                        "description": "Сущность пользователя",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/": {
            "get": {
                "description": "Поиск пользователя по его phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Поиск пользователя по номеру телефона",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/addCard": {
            "post": {
                "description": "Добавляет банковскую карту пользователю, поле userId это ID пользователя в базе данных, которому будем добавлять карту",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Добавляет банковскую карту пользователю",
                "parameters": [
                    {
                        "description": "Сущность банковской карты",
                        "name": "card",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.AddCardToUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/comparePassword": {
            "post": {
                "description": "Сравнивает пароль что ввел пользователь, с тем что есть в базе данных у его аккаунта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Сравнение вводимого пароля от пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.ComparePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.ComparePasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/deleteModel": {
            "post": {
                "description": "Удаляет пользователя опираясь на всю сущность модели",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Удаление пользователя по модели",
                "parameters": [
                    {
                        "description": "Модель пользователя",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.DeleteUserByModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.HTTPCodes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/isExists": {
            "post": {
                "description": "Проверка существует ли пользователь, проверка по номеру телефона",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Проверка существует ли пользователь",
                "parameters": [
                    {
                        "description": "Номер телефона",
                        "name": "phone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.UserIsExistsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.UserIsExistsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/isRole": {
            "post": {
                "description": "Проверяет пользователя на принадлежность к определенной роли",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Проверяет принадлежность к роли",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.IsRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.IsRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "description": "Поиск пользователя по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Поиск пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновление сущности пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Обновление пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Модель для обновления",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаление пользователя по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Удаление пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.HTTPCodes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Обновление типа пользователя (0 - юридическое лицо, 1 - физическое лицо)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Меняет тип пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Type поле пользователя, 0 - юридическое лицо, 1 - физическое лицо",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.ChangeUserTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}/card": {
            "get": {
                "description": "Извлечение карт пользователя по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Извлечение карт пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.FindUserCardResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}/company": {
            "get": {
                "description": "Извлечение компании пользователя по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Извлечение компании пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}/donation": {
            "get": {
                "description": "Извлечение пожертвований пользователя по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Извлечение пожертвований пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatabaseServicev1.FindUserDonationsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "DatabaseServicev1.AddCardToCompanyRequest": {
            "type": "object",
            "properties": {
                "card": {
                    "description": "* Банковская карта",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.CreateCardCompanyRequest"
                        }
                    ]
                }
            }
        },
        "DatabaseServicev1.AddCardToCompanyResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "* Адрес офиса компании",
                    "type": "string"
                },
                "card": {
                    "description": "* Банковская карта компании",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.CardCompany"
                        }
                    ]
                },
                "createdAt": {
                    "description": "* Дата создания сущности в базе данных",
                    "type": "string"
                },
                "id": {
                    "description": "* ID компании в базе данных",
                    "type": "integer"
                },
                "inn": {
                    "description": "* ИНН юридического лица",
                    "type": "string"
                },
                "kpp": {
                    "description": "* КПП юридического лица",
                    "type": "string"
                },
                "okpo": {
                    "description": "* ОКПО предприятия/организации",
                    "type": "string"
                },
                "phone": {
                    "description": "* Номер телефона компании",
                    "type": "string"
                },
                "site": {
                    "description": "* Сайт компании",
                    "type": "string"
                },
                "title": {
                    "description": "* Название компании",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "* Дата последнего обновления сущности в базе данных",
                    "type": "string"
                },
                "userId": {
                    "description": "* ID пользователя к которому относится данная компания",
                    "type": "integer"
                }
            }
        },
        "DatabaseServicev1.AddCardToUserRequest": {
            "type": "object",
            "properties": {
                "card": {
                    "description": "* Банковская карта",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.CreateCardRequest"
                        }
                    ]
                }
            }
        },
        "DatabaseServicev1.Card": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "* Дата создания сущности в базе данных",
                    "type": "string"
                },
                "cvv": {
                    "description": "* CVV код карты",
                    "type": "integer"
                },
                "date": {
                    "description": "* Дата до которой активна карта",
                    "type": "string"
                },
                "fullName": {
                    "description": "* ФИО с банковской карты",
                    "type": "string"
                },
                "id": {
                    "description": "* ID банковской карты в базе данных",
                    "type": "integer"
                },
                "number": {
                    "description": "* Номер карты",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "* Дата последнего обновления сущности в базе данных",
                    "type": "string"
                },
                "userId": {
                    "description": "* ID пользователя которому принадлежит данная карта",
                    "type": "integer"
                }
            }
        },
        "DatabaseServicev1.CardCompany": {
            "type": "object",
            "properties": {
                "companyId": {
                    "description": "* ID компании которой принадлежит данная карта",
                    "type": "integer"
                },
                "createdAt": {
                    "description": "* Дата создания сущности в базе данных",
                    "type": "string"
                },
                "cvv": {
                    "description": "* CVV код карты",
                    "type": "integer"
                },
                "date": {
                    "description": "* Дата до которой активна карта",
                    "type": "string"
                },
                "fullName": {
                    "description": "* ФИО с банковской карты",
                    "type": "string"
                },
                "id": {
                    "description": "* ID банковской карты в базе данных",
                    "type": "integer"
                },
                "number": {
                    "description": "* Номер карты",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "* Дата последнего обновления сущности в базе данных",
                    "type": "string"
                }
            }
        },
        "DatabaseServicev1.CardsCompaniesResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "description": "* Массив банковских карт компаний",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.CardCompany"
                    }
                }
            }
        },
        "DatabaseServicev1.CardsResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "description": "* Массив банковских карт пользователя",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.Card"
                    }
                }
            }
        },
        "DatabaseServicev1.ChangeUserTypeResponse": {
            "type": "object",
            "properties": {
                "accessory": {
                    "description": "* Успешность операции изменения типа (true/false)",
                    "type": "boolean"
                }
            }
        },
        "DatabaseServicev1.CompaniesResponse": {
            "type": "object",
            "properties": {
                "companies": {
                    "description": "* Массив компаний",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.Company"
                    }
                }
            }
        },
        "DatabaseServicev1.Company": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "* Адрес офиса компании",
                    "type": "string"
                },
                "card": {
                    "description": "* Банковская карта компании",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.CardCompany"
                        }
                    ]
                },
                "createdAt": {
                    "description": "* Дата создания сущности в базе данных",
                    "type": "string"
                },
                "id": {
                    "description": "* ID компании в базе данных",
                    "type": "integer"
                },
                "inn": {
                    "description": "* ИНН юридического лица",
                    "type": "string"
                },
                "kpp": {
                    "description": "* КПП юридического лица",
                    "type": "string"
                },
                "okpo": {
                    "description": "* ОКПО предприятия/организации",
                    "type": "string"
                },
                "phone": {
                    "description": "* Номер телефона компании",
                    "type": "string"
                },
                "site": {
                    "description": "* Сайт компании",
                    "type": "string"
                },
                "title": {
                    "description": "* Название компании",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "* Дата последнего обновления сущности в базе данных",
                    "type": "string"
                },
                "userId": {
                    "description": "* ID пользователя к которому относится данная компания",
                    "type": "integer"
                }
            }
        },
        "DatabaseServicev1.ComparePasswordRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "* Пароль который будем сравнивать с тем, что есть в базе данных",
                    "type": "string"
                },
                "phone": {
                    "description": "* Номер телефона пользователя, чей пароль будем искать для сравнения",
                    "type": "string"
                }
            }
        },
        "DatabaseServicev1.ComparePasswordResponse": {
            "type": "object",
            "properties": {
                "accessory": {
                    "description": "* Совпадает ли пароль (true/false)",
                    "type": "boolean"
                }
            }
        },
        "DatabaseServicev1.CreateCardCompanyRequest": {
            "type": "object",
            "properties": {
                "companyId": {
                    "description": "* ID компании которой принадлежит данная карта",
                    "type": "integer"
                },
                "cvv": {
                    "description": "* CVV код банковской карты",
                    "type": "integer"
                },
                "date": {
                    "description": "* Дата до которой активна карта",
                    "type": "string"
                },
                "fullName": {
                    "description": "* ФИО с банковской карты",
                    "type": "string"
                },
                "number": {
                    "description": "* Номер банковской карты",
                    "type": "string"
                }
            }
        },
        "DatabaseServicev1.CreateCardRequest": {
            "type": "object",
            "properties": {
                "cvv": {
                    "description": "* CVV код карты",
                    "type": "integer"
                },
                "date": {
                    "description": "* Дата до которой активна карта",
                    "type": "string"
                },
                "fullName": {
                    "description": "* ФИО с банковской карты",
                    "type": "string"
                },
                "number": {
                    "description": "* Номер карты",
                    "type": "string"
                },
                "userId": {
                    "description": "* ID пользователя кому принадлежит карта",
                    "type": "integer"
                }
            }
        },
        "DatabaseServicev1.CreateCompanyRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "* Адрес офиса компании",
                    "type": "string"
                },
                "card": {
                    "description": "* Банковская карта компании",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.CardCompany"
                        }
                    ]
                },
                "inn": {
                    "description": "* ИНН юридического лица",
                    "type": "string"
                },
                "kpp": {
                    "description": "* КПП юридического лица",
                    "type": "string"
                },
                "okpo": {
                    "description": "* ОКПО предприятия/организации",
                    "type": "string"
                },
                "phone": {
                    "description": "* Номер телефона компании",
                    "type": "string"
                },
                "site": {
                    "description": "* Сайт компании",
                    "type": "string"
                },
                "title": {
                    "description": "* Название компании",
                    "type": "string"
                },
                "userId": {
                    "description": "* ID пользователя к которому относится данная компания",
                    "type": "integer"
                }
            }
        },
        "DatabaseServicev1.CreateDonationsRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "* Сумма пожертвования",
                    "type": "number"
                },
                "title": {
                    "description": "* Произвольное название пожертвования, примерно так: \"На лекарства\"",
                    "type": "string"
                },
                "userId": {
                    "description": "* ID пользователя, чье это пожертвование",
                    "type": "integer"
                },
                "wards": {
                    "description": "* Подопечный данного пожертвования",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.Ward"
                        }
                    ]
                }
            }
        },
        "DatabaseServicev1.CreateUserRequest": {
            "type": "object",
            "properties": {
                "card": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.CreateCardRequest"
                    }
                },
                "company": {
                    "description": "* Компания пользователя, если он является юридическим лицом",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.CreateCompanyRequest"
                        }
                    ]
                },
                "donations": {
                    "description": "* Пожертвования пользователя",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.CreateDonationsRequest"
                    }
                },
                "email": {
                    "description": "* Email пользователя (обязательно проверяем на формат email@email.com)",
                    "type": "string"
                },
                "password": {
                    "description": "* Пароль пользователя (необходимо дополнительно валидировать корректность пароля)",
                    "type": "string"
                },
                "phone": {
                    "description": "* Номер телефона (необходимо дополнительно валидировать формат)",
                    "type": "string"
                },
                "role": {
                    "description": "* Роль пользователя",
                    "type": "string"
                },
                "type": {
                    "description": "* Тип пользователя, 0 - физическое лицо, 1 - юридическое лицо",
                    "type": "integer"
                },
                "username": {
                    "description": "* Имя (никнейм) пользователя",
                    "type": "string"
                }
            }
        },
        "DatabaseServicev1.CreateUserResponse": {
            "type": "object",
            "properties": {
                "AvatarPath": {
                    "description": "* Локальный путь к аватару пользователя",
                    "type": "string"
                },
                "card": {
                    "description": "* Банковские карты пользователя",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.Card"
                    }
                },
                "company": {
                    "description": "* Компания пользователя, если он является юридическим лицом",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.Company"
                        }
                    ]
                },
                "createdAt": {
                    "description": "* Дата создания сущности записи в базе данных",
                    "type": "string"
                },
                "donations": {
                    "description": "* Пожертвования пользователя",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.Donations"
                    }
                },
                "email": {
                    "description": "* Email пользователя",
                    "type": "string"
                },
                "id": {
                    "description": "* ID пользователя",
                    "type": "integer"
                },
                "password": {
                    "description": "* Пароль пользователя (закодирован в MD5Hash)",
                    "type": "string"
                },
                "phone": {
                    "description": "* Номер телефона пользователя",
                    "type": "string"
                },
                "role": {
                    "description": "* Роль пользователя",
                    "type": "string"
                },
                "type": {
                    "description": "* Тип пользователя, 0 - физическое лицо, 1 - юридическое лицо",
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "* Дата последнего обновления сущности в базе данных",
                    "type": "string"
                },
                "username": {
                    "description": "* Имя (никнейм) пользователя",
                    "type": "string"
                }
            }
        },
        "DatabaseServicev1.DeleteCompanyByModelRequest": {
            "type": "object",
            "properties": {
                "company": {
                    "description": "* Полная сущность модели для удаления",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.Company"
                        }
                    ]
                }
            }
        },
        "DatabaseServicev1.DeleteUserByModelRequest": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "* Сущность пользователя для удаления (полная модель пользователя)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.CreateUserResponse"
                        }
                    ]
                }
            }
        },
        "DatabaseServicev1.Donations": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "* Сумма пожертвования",
                    "type": "number"
                },
                "createdAt": {
                    "description": "* Дата создания сущности в базе данных",
                    "type": "string"
                },
                "id": {
                    "description": "* ID пожертвования в базе данных",
                    "type": "integer"
                },
                "title": {
                    "description": "* Название пожертвования (например \"На лекарства\")",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "* Дата последнего обновления сущности в базе данных",
                    "type": "string"
                },
                "userId": {
                    "description": "* ID пользователя, которому принадлежит пожертвование",
                    "type": "integer"
                },
                "ward": {
                    "description": "* Подопечный этого пожертвования",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.Ward"
                        }
                    ]
                }
            }
        },
        "DatabaseServicev1.FindUserCardResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "description": "* Массив банковских карт",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.Card"
                    }
                }
            }
        },
        "DatabaseServicev1.FindUserDonationsResponse": {
            "type": "object",
            "properties": {
                "donations": {
                    "description": "* Массив пожертвований пользователя",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.Donations"
                    }
                }
            }
        },
        "DatabaseServicev1.HTTPCodes": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "* HTTP код ответа",
                    "type": "integer"
                }
            }
        },
        "DatabaseServicev1.IsRoleRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "* ID пользователя",
                    "type": "integer"
                },
                "role": {
                    "description": "* Роль пользователя которую мы ожиданием",
                    "type": "string"
                }
            }
        },
        "DatabaseServicev1.IsRoleResponse": {
            "type": "object",
            "properties": {
                "accessory": {
                    "description": "* Принадлежность к роли (true/false)",
                    "type": "boolean"
                }
            }
        },
        "DatabaseServicev1.UpdateCompanyRequest": {
            "type": "object",
            "properties": {
                "company": {
                    "description": "* Компания которую обновляем",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.Company"
                        }
                    ]
                }
            }
        },
        "DatabaseServicev1.UpdateUserCardRequest1": {
            "type": "object",
            "properties": {
                "cvv": {
                    "description": "* CVV код карты",
                    "type": "integer"
                },
                "date": {
                    "description": "* Дата до которой активна карта",
                    "type": "string"
                },
                "fullName": {
                    "description": "* ФИО с банковской карты",
                    "type": "string"
                },
                "number": {
                    "description": "* Номер карты",
                    "type": "string"
                }
            }
        },
        "DatabaseServicev1.UpdateUserCardResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "* Дата создания сущности в базе данных",
                    "type": "string"
                },
                "cvv": {
                    "description": "* CVV код карты",
                    "type": "integer"
                },
                "date": {
                    "description": "* Дата до которой активна карта",
                    "type": "string"
                },
                "fullName": {
                    "description": "* ФИО с банковской карты",
                    "type": "string"
                },
                "id": {
                    "description": "* ID банковской карты в базе данных",
                    "type": "integer"
                },
                "number": {
                    "description": "* Номер карты",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "* Дата последнего обновления сущности в базе данных",
                    "type": "string"
                },
                "userId": {
                    "description": "* ID пользователя которому принадлежит данная карта",
                    "type": "integer"
                }
            }
        },
        "DatabaseServicev1.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "AvatarPath": {
                    "description": "* Локальный путь к аватару пользователя",
                    "type": "string"
                },
                "card": {
                    "description": "* Массив банковских карт пользователя",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.Card"
                    }
                },
                "company": {
                    "description": "* Компания пользователя, если он является юридическим лицом (type = 1)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DatabaseServicev1.Company"
                        }
                    ]
                },
                "createdAt": {
                    "description": "* Дата создания сущности в базе данных",
                    "type": "string"
                },
                "donations": {
                    "description": "* Массив пожертвований пользователя",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.Donations"
                    }
                },
                "email": {
                    "description": "* Email пользователя",
                    "type": "string"
                },
                "id": {
                    "description": "* ID пользователя в базе данных",
                    "type": "integer"
                },
                "password": {
                    "description": "* Пароль пользователя (закодирован в MD5Hash)",
                    "type": "string"
                },
                "phone": {
                    "description": "* Номер телефона пользователя",
                    "type": "string"
                },
                "role": {
                    "description": "* Роль пользователя",
                    "type": "string"
                },
                "type": {
                    "description": "* Тип пользователя (0 - физическое лицо, 1 - юридическое лицо)",
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "* Дата последнего обновления сущности в базе данных",
                    "type": "string"
                },
                "username": {
                    "description": "* Имя (никнейм) пользователя",
                    "type": "string"
                }
            }
        },
        "DatabaseServicev1.UserIsExistsRequest": {
            "type": "object",
            "properties": {
                "phone": {
                    "description": "* Номер телефона пользователя, по которому будем искать сущность",
                    "type": "string"
                }
            }
        },
        "DatabaseServicev1.UserIsExistsResponse": {
            "type": "object",
            "properties": {
                "isExists": {
                    "description": "* Существует ли пользователь в базе данных (true/false)",
                    "type": "boolean"
                }
            }
        },
        "DatabaseServicev1.UsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "* Массив пользователей",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatabaseServicev1.CreateUserResponse"
                    }
                }
            }
        },
        "DatabaseServicev1.Ward": {
            "type": "object",
            "properties": {
                "AvatarPath": {
                    "description": "* Локальный путь к аватару подопечного",
                    "type": "string"
                },
                "createdAt": {
                    "description": "* Дата создания сущности в базе данных",
                    "type": "string"
                },
                "donationId": {
                    "description": "* ID пожертвования к которому относится данный подопечный",
                    "type": "integer"
                },
                "fullName": {
                    "description": "* Полное имя подопечного",
                    "type": "string"
                },
                "id": {
                    "description": "* ID подопечного в базе данных",
                    "type": "integer"
                },
                "necessary": {
                    "description": "* Необходимая сумма денег на необходимость",
                    "type": "number"
                },
                "title": {
                    "description": "* Дополнительный текст к подопечному",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "* Дата последнего обновления сущности в базе данных",
                    "type": "string"
                },
                "want": {
                    "description": "* Необходимость подопечного (то в чем он нуждается, например \"Лекарства\")",
                    "type": "string"
                }
            }
        },
        "server.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "API Gateway",
	Description:      "Сервер маршрутизации",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
