definitions:
  DatabaseServicev1.Card:
    properties:
      createdAt:
        description: '* Дата создания сущности в базе данных'
        type: string
      cvv:
        description: '* CVV код карты'
        type: integer
      date:
        description: '* Дата до которой активна карта'
        type: string
      fullName:
        description: '* ФИО с банковской карты'
        type: string
      id:
        description: '* ID банковской карты в базе данных'
        type: integer
      number:
        description: '* Номер карты'
        type: string
      updatedAt:
        description: '* Дата последнего обновления сущности в базе данных'
        type: string
      userId:
        description: '* ID пользователя которому принадлежит данная карта'
        type: integer
    type: object
  DatabaseServicev1.CardCompany:
    properties:
      companyId:
        description: '* ID компании которой принадлежит данная карта'
        type: integer
      createdAt:
        description: '* Дата создания сущности в базе данных'
        type: string
      cvv:
        description: '* CVV код карты'
        type: integer
      date:
        description: '* Дата до которой активна карта'
        type: string
      fullName:
        description: '* ФИО с банковской карты'
        type: string
      id:
        description: '* ID банковской карты в базе данных'
        type: integer
      number:
        description: '* Номер карты'
        type: string
      updatedAt:
        description: '* Дата последнего обновления сущности в базе данных'
        type: string
    type: object
  DatabaseServicev1.Company:
    properties:
      address:
        description: '* Адрес офиса компании'
        type: string
      card:
        allOf:
        - $ref: '#/definitions/DatabaseServicev1.CardCompany'
        description: '* Банковская карта компании'
      createdAt:
        description: '* Дата создания сущности в базе данных'
        type: string
      id:
        description: '* ID компании в базе данных'
        type: integer
      inn:
        description: '* ИНН юридического лица'
        type: string
      kpp:
        description: '* КПП юридического лица'
        type: string
      okpo:
        description: '* ОКПО предприятия/организации'
        type: string
      phone:
        description: '* Номер телефона компании'
        type: string
      site:
        description: '* Сайт компании'
        type: string
      title:
        description: '* Название компании'
        type: string
      updatedAt:
        description: '* Дата последнего обновления сущности в базе данных'
        type: string
      userId:
        description: '* ID пользователя к которому относится данная компания'
        type: integer
    type: object
  DatabaseServicev1.CreateUserResponse:
    properties:
      AvatarPath:
        description: '* Локальный путь к аватару пользователя'
        type: string
      card:
        description: '* Банковские карты пользователя'
        items:
          $ref: '#/definitions/DatabaseServicev1.Card'
        type: array
      company:
        allOf:
        - $ref: '#/definitions/DatabaseServicev1.Company'
        description: '* Компания пользователя, если он является юридическим лицом'
      createdAt:
        description: '* Дата создания сущности записи в базе данных'
        type: string
      donations:
        description: '* Пожертвования пользователя'
        items:
          $ref: '#/definitions/DatabaseServicev1.Donations'
        type: array
      email:
        description: '* Email пользователя'
        type: string
      id:
        description: '* ID пользователя'
        type: integer
      password:
        description: '* Пароль пользователя (закодирован в MD5Hash)'
        type: string
      phone:
        description: '* Номер телефона пользователя'
        type: string
      role:
        description: '* Роль пользователя'
        type: string
      type:
        description: '* Тип пользователя, 0 - физическое лицо, 1 - юридическое лицо'
        type: integer
      updatedAt:
        description: '* Дата последнего обновления сущности в базе данных'
        type: string
      username:
        description: '* Имя (никнейм) пользователя'
        type: string
    type: object
  DatabaseServicev1.Donations:
    properties:
      amount:
        description: '* Сумма пожертвования'
        type: number
      createdAt:
        description: '* Дата создания сущности в базе данных'
        type: string
      id:
        description: '* ID пожертвования в базе данных'
        type: integer
      title:
        description: '* Название пожертвования (например "На лекарства")'
        type: string
      updatedAt:
        description: '* Дата последнего обновления сущности в базе данных'
        type: string
      userId:
        description: '* ID пользователя, которому принадлежит пожертвование'
        type: integer
      ward:
        allOf:
        - $ref: '#/definitions/DatabaseServicev1.Ward'
        description: '* Подопечный этого пожертвования'
    type: object
  DatabaseServicev1.UsersResponse:
    properties:
      users:
        description: '* Массив пользователей'
        items:
          $ref: '#/definitions/DatabaseServicev1.CreateUserResponse'
        type: array
    type: object
  DatabaseServicev1.Ward:
    properties:
      AvatarPath:
        description: '* Локальный путь к аватару подопечного'
        type: string
      createdAt:
        description: '* Дата создания сущности в базе данных'
        type: string
      donationId:
        description: '* ID пожертвования к которому относится данный подопечный'
        type: integer
      fullName:
        description: '* Полное имя подопечного'
        type: string
      id:
        description: '* ID подопечного в базе данных'
        type: integer
      necessary:
        description: '* Необходимая сумма денег на необходимость'
        type: number
      title:
        description: '* Дополнительный текст к подопечному'
        type: string
      updatedAt:
        description: '* Дата последнего обновления сущности в базе данных'
        type: string
      want:
        description: '* Необходимость подопечного (то в чем он нуждается, например
          "Лекарства")'
        type: string
    type: object
  server.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
  description: Сервер маршрутизации
  title: API Gateway
  version: "1.0"
paths:
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Массив пользователей в базе данных
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DatabaseServicev1.UsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.HTTPError'
      summary: Список всех пользователей
      tags:
      - users
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Поиск пользователя по ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DatabaseServicev1.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.HTTPError'
      summary: Поиск пользователя
      tags:
      - users
swagger: "2.0"
